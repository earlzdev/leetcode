// !$*UTF8*$!
{
	archiveVersion = 1;
	classes = {
	};
	objectVersion = 56;
	objects = {

/* Begin PBXBuildFile section */
		840398402A0C033B0087DA70 /* SymmetricTree.swift in Sources */ = {isa = PBXBuildFile; fileRef = 8403983F2A0C033B0087DA70 /* SymmetricTree.swift */; };
		840ED8352A1F2C4C00ACC989 /* 144. Binary Tree Preorder Traversal .swift in Sources */ = {isa = PBXBuildFile; fileRef = 840ED8342A1F2C4C00ACC989 /* 144. Binary Tree Preorder Traversal .swift */; };
		841968F62A0CDAFA00E08375 /* 104. Maximum Depth of Binary Tree.swift in Sources */ = {isa = PBXBuildFile; fileRef = 841968F52A0CDAFA00E08375 /* 104. Maximum Depth of Binary Tree.swift */; };
		841A45542A3E188F0010FEFA /* 219. Contains Duplicate II .swift in Sources */ = {isa = PBXBuildFile; fileRef = 841A45532A3E188F0010FEFA /* 219. Contains Duplicate II .swift */; };
		8424F5D62A31802400D2CFED /* 190. Reverse Bits.swift in Sources */ = {isa = PBXBuildFile; fileRef = 8424F5D52A31802400D2CFED /* 190. Reverse Bits.swift */; };
		842EDF2D2A5BB32200E04513 /* 412. Fizz Buzz.swift in Sources */ = {isa = PBXBuildFile; fileRef = 842EDF2C2A5BB32200E04513 /* 412. Fizz Buzz.swift */; };
		843ED7E92A5134150004C4B6 /* 383. Ransom Note .swift in Sources */ = {isa = PBXBuildFile; fileRef = 843ED7E82A5134150004C4B6 /* 383. Ransom Note .swift */; };
		8445BDAF2A10DB2700758334 /* 110. Balanced Binary Tree.swift in Sources */ = {isa = PBXBuildFile; fileRef = 8445BDAE2A10DB2700758334 /* 110. Balanced Binary Tree.swift */; };
		844F58D22A5E407B008914D9 /* 434. Number of Segments in a String .swift in Sources */ = {isa = PBXBuildFile; fileRef = 844F58D12A5E407B008914D9 /* 434. Number of Segments in a String .swift */; };
		8459E36A2A5D02FE000978ED /* 415. Add Strings .swift in Sources */ = {isa = PBXBuildFile; fileRef = 8459E3692A5D02FE000978ED /* 415. Add Strings .swift */; };
		846108D72A63ADB700A6A230 /* 520. Detect Capital .swift in Sources */ = {isa = PBXBuildFile; fileRef = 846108D62A63ADB700A6A230 /* 520. Detect Capital .swift */; };
		84696B1B2A0B50CA00BEE76E /* SameTree.swift in Sources */ = {isa = PBXBuildFile; fileRef = 84696B1A2A0B50CA00BEE76E /* SameTree.swift */; };
		846A56CB2A2EDDB20039493E /* 169. Majority Element .swift in Sources */ = {isa = PBXBuildFile; fileRef = 846A56CA2A2EDDB20039493E /* 169. Majority Element .swift */; };
		846D27C22A396AC700DA2B59 /* 206. Reverse Linked List.swift in Sources */ = {isa = PBXBuildFile; fileRef = 846D27C12A396AC700DA2B59 /* 206. Reverse Linked List.swift */; };
		8473170E2A1B17AA00D665A0 /* 121. Best Time to Buy and Sell Stock.swift in Sources */ = {isa = PBXBuildFile; fileRef = 8473170D2A1B17AA00D665A0 /* 121. Best Time to Buy and Sell Stock.swift */; };
		84741D2F2A1C69A100F428C5 /* 125. Valid Palindrome .swift in Sources */ = {isa = PBXBuildFile; fileRef = 84741D2E2A1C69A100F428C5 /* 125. Valid Palindrome .swift */; };
		847AE3AD2A45491C00F60440 /* 257. Binary Tree Paths.swift in Sources */ = {isa = PBXBuildFile; fileRef = 847AE3AC2A45491C00F60440 /* 257. Binary Tree Paths.swift */; };
		847B42542A381ABE00842AAC /* 205. Isomorphic Strings .swift in Sources */ = {isa = PBXBuildFile; fileRef = 847B42532A381ABE00842AAC /* 205. Isomorphic Strings .swift */; };
		8480FD452A1882C100A1D5DF /* 119. Pascal's Triangle II .swift in Sources */ = {isa = PBXBuildFile; fileRef = 8480FD442A1882C100A1D5DF /* 119. Pascal's Triangle II .swift */; };
		8482D7CD2A26F8F900320062 /* 168. Excel Sheet Column Title .swift in Sources */ = {isa = PBXBuildFile; fileRef = 8482D7CC2A26F8F900320062 /* 168. Excel Sheet Column Title .swift */; };
		8486AA1F2A60F9D5007164E5 /* 482. License Key Formatting .swift in Sources */ = {isa = PBXBuildFile; fileRef = 8486AA1E2A60F9D5007164E5 /* 482. License Key Formatting .swift */; };
		8487AB1C2A25A33900B62D57 /* 145. Binary Tree Postorder Traversal .swift in Sources */ = {isa = PBXBuildFile; fileRef = 8487AB1B2A25A33900B62D57 /* 145. Binary Tree Postorder Traversal .swift */; };
		8487AB1E2A25AC2400B62D57 /* 160. Intersection of Two Linked Lists.swift in Sources */ = {isa = PBXBuildFile; fileRef = 8487AB1D2A25AC2400B62D57 /* 160. Intersection of Two Linked Lists.swift */; };
		8488723C2A53BB2C00205518 /* 389. Find the Difference.swift in Sources */ = {isa = PBXBuildFile; fileRef = 8488723B2A53BB2C00205518 /* 389. Find the Difference.swift */; };
		848909912A0429550066A414 /* main.swift in Sources */ = {isa = PBXBuildFile; fileRef = 848909902A0429550066A414 /* main.swift */; };
		848909992A042A130066A414 /* ClimbingStairs.swift in Sources */ = {isa = PBXBuildFile; fileRef = 848909982A042A130066A414 /* ClimbingStairs.swift */; };
		848CDAE02A11EA6B0009324F /* 111. Minimum Depth of Binary Tree.swift in Sources */ = {isa = PBXBuildFile; fileRef = 848CDADF2A11EA6B0009324F /* 111. Minimum Depth of Binary Tree.swift */; };
		8491708D2A566F24001EA29A /* 409. Longest Palindrome .swift in Sources */ = {isa = PBXBuildFile; fileRef = 8491708C2A566F24001EA29A /* 409. Longest Palindrome .swift */; };
		8492A6252A0A0B3E0098CEC9 /* BinaryTreeInorderTraversal.swift in Sources */ = {isa = PBXBuildFile; fileRef = 8492A6242A0A0B3E0098CEC9 /* BinaryTreeInorderTraversal.swift */; };
		84AECB452A493EDE00D9F75A /* 290. Word Pattern .swift in Sources */ = {isa = PBXBuildFile; fileRef = 84AECB442A493EDE00D9F75A /* 290. Word Pattern .swift */; };
		84B32F032A4154AD0084AA3B /* 226. Invert Binary Tree .swift in Sources */ = {isa = PBXBuildFile; fileRef = 84B32F022A4154AD0084AA3B /* 226. Invert Binary Tree .swift */; };
		84B822702A36E7C500827BD7 /* 203. Remove Linked List Elements .swift in Sources */ = {isa = PBXBuildFile; fileRef = 84B8226F2A36E7C500827BD7 /* 203. Remove Linked List Elements .swift */; };
		84BACD122A43F7210046E767 /* 242. Valid Anagram .swift in Sources */ = {isa = PBXBuildFile; fileRef = 84BACD112A43F7210046E767 /* 242. Valid Anagram .swift */; };
		84BCE0622A173C42009E2745 /* 118. Pascal's Triangle .swift in Sources */ = {isa = PBXBuildFile; fileRef = 84BCE0612A173C42009E2745 /* 118. Pascal's Triangle .swift */; };
		84BCF9642A0F3E34008B332A /* 108. Convert Sorted Array to Binary Search Tree.swift in Sources */ = {isa = PBXBuildFile; fileRef = 84BCF9632A0F3E34008B332A /* 108. Convert Sorted Array to Binary Search Tree.swift */; };
		84C1093E2A55650700930591 /* 392. Is Subsequence .swift in Sources */ = {isa = PBXBuildFile; fileRef = 84C1093D2A55650700930591 /* 392. Is Subsequence .swift */; };
		84C65D822A526B1100D640E7 /* 387. First Unique Character in a String .swift in Sources */ = {isa = PBXBuildFile; fileRef = 84C65D812A526B1100D640E7 /* 387. First Unique Character in a String .swift */; };
		84D1862C2A3ABDCF00DE06C4 /* 217. Contains Duplicate .swift in Sources */ = {isa = PBXBuildFile; fileRef = 84D1862B2A3ABDCF00DE06C4 /* 217. Contains Duplicate .swift */; };
		84D9F2842A5FB6EA00BC6A3E /* 459. Repeated Substring Pattern .swift in Sources */ = {isa = PBXBuildFile; fileRef = 84D9F2832A5FB6EA00BC6A3E /* 459. Repeated Substring Pattern .swift */; };
		84DF0DD22A0768E8008F2395 /* RemoveDuplicatesFromSortedList.swift in Sources */ = {isa = PBXBuildFile; fileRef = 84DF0DD12A0768E8008F2395 /* RemoveDuplicatesFromSortedList.swift */; };
		84DF0DD42A076EAA008F2395 /* MergeSortedArray.swift in Sources */ = {isa = PBXBuildFile; fileRef = 84DF0DD32A076EAA008F2395 /* MergeSortedArray.swift */; };
		84DF6F2F2A32D1780027D8D4 /* 191. Number of 1 Bits .swift in Sources */ = {isa = PBXBuildFile; fileRef = 84DF6F2E2A32D1780027D8D4 /* 191. Number of 1 Bits .swift */; };
		84DF6F312A32D43D0027D8D4 /* 202. Happy Number.swift in Sources */ = {isa = PBXBuildFile; fileRef = 84DF6F302A32D43D0027D8D4 /* 202. Happy Number.swift */; };
		84EAEE4A2A08B5E50025A6FA /* MatrixDiagonalSum.swift in Sources */ = {isa = PBXBuildFile; fileRef = 84EAEE492A08B5E50025A6FA /* MatrixDiagonalSum.swift */; };
		84ED135C2A1DBC270077EA35 /* 136. Single Number .swift in Sources */ = {isa = PBXBuildFile; fileRef = 84ED135B2A1DBC270077EA35 /* 136. Single Number .swift */; };
		84F8F32F2A1E339000431F9C /* 141. Linked List Cycle.swift in Sources */ = {isa = PBXBuildFile; fileRef = 84F8F32E2A1E339000431F9C /* 141. Linked List Cycle.swift */; };
		84FFEFED2A4A8F3F0022C63A /* 344. Reverse String .swift in Sources */ = {isa = PBXBuildFile; fileRef = 84FFEFEC2A4A8F3F0022C63A /* 344. Reverse String .swift */; };
		84FFEFEF2A4A8FA50022C63A /* 345. Reverse Vowels of a String.swift in Sources */ = {isa = PBXBuildFile; fileRef = 84FFEFEE2A4A8FA50022C63A /* 345. Reverse Vowels of a String.swift */; };
/* End PBXBuildFile section */

/* Begin PBXCopyFilesBuildPhase section */
		8489098B2A0429550066A414 /* CopyFiles */ = {
			isa = PBXCopyFilesBuildPhase;
			buildActionMask = 2147483647;
			dstPath = /usr/share/man/man1/;
			dstSubfolderSpec = 0;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 1;
		};
/* End PBXCopyFilesBuildPhase section */

/* Begin PBXFileReference section */
		8403983F2A0C033B0087DA70 /* SymmetricTree.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = SymmetricTree.swift; sourceTree = "<group>"; };
		840ED8342A1F2C4C00ACC989 /* 144. Binary Tree Preorder Traversal .swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "144. Binary Tree Preorder Traversal .swift"; sourceTree = "<group>"; };
		841968F52A0CDAFA00E08375 /* 104. Maximum Depth of Binary Tree.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "104. Maximum Depth of Binary Tree.swift"; sourceTree = "<group>"; };
		841A45532A3E188F0010FEFA /* 219. Contains Duplicate II .swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "219. Contains Duplicate II .swift"; sourceTree = "<group>"; };
		8424F5D52A31802400D2CFED /* 190. Reverse Bits.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "190. Reverse Bits.swift"; sourceTree = "<group>"; };
		842EDF2C2A5BB32200E04513 /* 412. Fizz Buzz.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "412. Fizz Buzz.swift"; sourceTree = "<group>"; };
		843ED7E82A5134150004C4B6 /* 383. Ransom Note .swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "383. Ransom Note .swift"; sourceTree = "<group>"; };
		8445BDAE2A10DB2700758334 /* 110. Balanced Binary Tree.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "110. Balanced Binary Tree.swift"; sourceTree = "<group>"; };
		844F58D12A5E407B008914D9 /* 434. Number of Segments in a String .swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "434. Number of Segments in a String .swift"; sourceTree = "<group>"; };
		8459E3692A5D02FE000978ED /* 415. Add Strings .swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "415. Add Strings .swift"; sourceTree = "<group>"; };
		846108D62A63ADB700A6A230 /* 520. Detect Capital .swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "520. Detect Capital .swift"; sourceTree = "<group>"; };
		84696B1A2A0B50CA00BEE76E /* SameTree.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = SameTree.swift; sourceTree = "<group>"; };
		846A56CA2A2EDDB20039493E /* 169. Majority Element .swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "169. Majority Element .swift"; sourceTree = "<group>"; };
		846D27C12A396AC700DA2B59 /* 206. Reverse Linked List.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "206. Reverse Linked List.swift"; sourceTree = "<group>"; };
		8473170D2A1B17AA00D665A0 /* 121. Best Time to Buy and Sell Stock.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "121. Best Time to Buy and Sell Stock.swift"; sourceTree = "<group>"; };
		84741D2E2A1C69A100F428C5 /* 125. Valid Palindrome .swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "125. Valid Palindrome .swift"; sourceTree = "<group>"; };
		847AE3AC2A45491C00F60440 /* 257. Binary Tree Paths.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "257. Binary Tree Paths.swift"; sourceTree = "<group>"; };
		847B42532A381ABE00842AAC /* 205. Isomorphic Strings .swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "205. Isomorphic Strings .swift"; sourceTree = "<group>"; };
		8480FD442A1882C100A1D5DF /* 119. Pascal's Triangle II .swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "119. Pascal's Triangle II .swift"; sourceTree = "<group>"; };
		8482D7CC2A26F8F900320062 /* 168. Excel Sheet Column Title .swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "168. Excel Sheet Column Title .swift"; sourceTree = "<group>"; };
		8486AA1E2A60F9D5007164E5 /* 482. License Key Formatting .swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "482. License Key Formatting .swift"; sourceTree = "<group>"; };
		8487AB1B2A25A33900B62D57 /* 145. Binary Tree Postorder Traversal .swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "145. Binary Tree Postorder Traversal .swift"; sourceTree = "<group>"; };
		8487AB1D2A25AC2400B62D57 /* 160. Intersection of Two Linked Lists.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "160. Intersection of Two Linked Lists.swift"; sourceTree = "<group>"; };
		8488723B2A53BB2C00205518 /* 389. Find the Difference.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "389. Find the Difference.swift"; sourceTree = "<group>"; };
		8489098D2A0429550066A414 /* leetcodeSwiftC */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; includeInIndex = 0; path = leetcodeSwiftC; sourceTree = BUILT_PRODUCTS_DIR; };
		848909902A0429550066A414 /* main.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = main.swift; sourceTree = "<group>"; };
		848909982A042A130066A414 /* ClimbingStairs.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = ClimbingStairs.swift; sourceTree = "<group>"; };
		848CDADF2A11EA6B0009324F /* 111. Minimum Depth of Binary Tree.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "111. Minimum Depth of Binary Tree.swift"; sourceTree = "<group>"; };
		8491708C2A566F24001EA29A /* 409. Longest Palindrome .swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "409. Longest Palindrome .swift"; sourceTree = "<group>"; };
		8492A6242A0A0B3E0098CEC9 /* BinaryTreeInorderTraversal.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = BinaryTreeInorderTraversal.swift; sourceTree = "<group>"; };
		84AECB442A493EDE00D9F75A /* 290. Word Pattern .swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "290. Word Pattern .swift"; sourceTree = "<group>"; };
		84B32F022A4154AD0084AA3B /* 226. Invert Binary Tree .swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "226. Invert Binary Tree .swift"; sourceTree = "<group>"; };
		84B8226F2A36E7C500827BD7 /* 203. Remove Linked List Elements .swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "203. Remove Linked List Elements .swift"; sourceTree = "<group>"; };
		84BACD112A43F7210046E767 /* 242. Valid Anagram .swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "242. Valid Anagram .swift"; sourceTree = "<group>"; };
		84BCE0612A173C42009E2745 /* 118. Pascal's Triangle .swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "118. Pascal's Triangle .swift"; sourceTree = "<group>"; };
		84BCF9632A0F3E34008B332A /* 108. Convert Sorted Array to Binary Search Tree.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "108. Convert Sorted Array to Binary Search Tree.swift"; sourceTree = "<group>"; };
		84C1093D2A55650700930591 /* 392. Is Subsequence .swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "392. Is Subsequence .swift"; sourceTree = "<group>"; };
		84C65D812A526B1100D640E7 /* 387. First Unique Character in a String .swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "387. First Unique Character in a String .swift"; sourceTree = "<group>"; };
		84D1862B2A3ABDCF00DE06C4 /* 217. Contains Duplicate .swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "217. Contains Duplicate .swift"; sourceTree = "<group>"; };
		84D9F2832A5FB6EA00BC6A3E /* 459. Repeated Substring Pattern .swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "459. Repeated Substring Pattern .swift"; sourceTree = "<group>"; };
		84DF0DD12A0768E8008F2395 /* RemoveDuplicatesFromSortedList.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = RemoveDuplicatesFromSortedList.swift; sourceTree = "<group>"; };
		84DF0DD32A076EAA008F2395 /* MergeSortedArray.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = MergeSortedArray.swift; sourceTree = "<group>"; };
		84DF6F2E2A32D1780027D8D4 /* 191. Number of 1 Bits .swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "191. Number of 1 Bits .swift"; sourceTree = "<group>"; };
		84DF6F302A32D43D0027D8D4 /* 202. Happy Number.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "202. Happy Number.swift"; sourceTree = "<group>"; };
		84EAEE492A08B5E50025A6FA /* MatrixDiagonalSum.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = MatrixDiagonalSum.swift; sourceTree = "<group>"; };
		84ED135B2A1DBC270077EA35 /* 136. Single Number .swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "136. Single Number .swift"; sourceTree = "<group>"; };
		84F8F32E2A1E339000431F9C /* 141. Linked List Cycle.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "141. Linked List Cycle.swift"; sourceTree = "<group>"; };
		84FFEFEC2A4A8F3F0022C63A /* 344. Reverse String .swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "344. Reverse String .swift"; sourceTree = "<group>"; };
		84FFEFEE2A4A8FA50022C63A /* 345. Reverse Vowels of a String.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "345. Reverse Vowels of a String.swift"; sourceTree = "<group>"; };
/* End PBXFileReference section */

/* Begin PBXFrameworksBuildPhase section */
		8489098A2A0429550066A414 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXFrameworksBuildPhase section */

/* Begin PBXGroup section */
		848909842A0429550066A414 = {
			isa = PBXGroup;
			children = (
				8489098F2A0429550066A414 /* leetcodeSwiftC */,
				8489098E2A0429550066A414 /* Products */,
			);
			sourceTree = "<group>";
		};
		8489098E2A0429550066A414 /* Products */ = {
			isa = PBXGroup;
			children = (
				8489098D2A0429550066A414 /* leetcodeSwiftC */,
			);
			name = Products;
			sourceTree = "<group>";
		};
		8489098F2A0429550066A414 /* leetcodeSwiftC */ = {
			isa = PBXGroup;
			children = (
				848909902A0429550066A414 /* main.swift */,
				848909972A0429BC0066A414 /* easy */,
			);
			path = leetcodeSwiftC;
			sourceTree = "<group>";
		};
		848909972A0429BC0066A414 /* easy */ = {
			isa = PBXGroup;
			children = (
				848909982A042A130066A414 /* ClimbingStairs.swift */,
				84DF0DD12A0768E8008F2395 /* RemoveDuplicatesFromSortedList.swift */,
				84DF0DD32A076EAA008F2395 /* MergeSortedArray.swift */,
				84EAEE492A08B5E50025A6FA /* MatrixDiagonalSum.swift */,
				8492A6242A0A0B3E0098CEC9 /* BinaryTreeInorderTraversal.swift */,
				84696B1A2A0B50CA00BEE76E /* SameTree.swift */,
				8403983F2A0C033B0087DA70 /* SymmetricTree.swift */,
				841968F52A0CDAFA00E08375 /* 104. Maximum Depth of Binary Tree.swift */,
				84BCF9632A0F3E34008B332A /* 108. Convert Sorted Array to Binary Search Tree.swift */,
				8445BDAE2A10DB2700758334 /* 110. Balanced Binary Tree.swift */,
				848CDADF2A11EA6B0009324F /* 111. Minimum Depth of Binary Tree.swift */,
				84BCE0612A173C42009E2745 /* 118. Pascal's Triangle .swift */,
				8480FD442A1882C100A1D5DF /* 119. Pascal's Triangle II .swift */,
				8473170D2A1B17AA00D665A0 /* 121. Best Time to Buy and Sell Stock.swift */,
				84741D2E2A1C69A100F428C5 /* 125. Valid Palindrome .swift */,
				84ED135B2A1DBC270077EA35 /* 136. Single Number .swift */,
				84F8F32E2A1E339000431F9C /* 141. Linked List Cycle.swift */,
				840ED8342A1F2C4C00ACC989 /* 144. Binary Tree Preorder Traversal .swift */,
				8487AB1B2A25A33900B62D57 /* 145. Binary Tree Postorder Traversal .swift */,
				8487AB1D2A25AC2400B62D57 /* 160. Intersection of Two Linked Lists.swift */,
				8482D7CC2A26F8F900320062 /* 168. Excel Sheet Column Title .swift */,
				846A56CA2A2EDDB20039493E /* 169. Majority Element .swift */,
				8424F5D52A31802400D2CFED /* 190. Reverse Bits.swift */,
				84DF6F2E2A32D1780027D8D4 /* 191. Number of 1 Bits .swift */,
				84DF6F302A32D43D0027D8D4 /* 202. Happy Number.swift */,
				84B8226F2A36E7C500827BD7 /* 203. Remove Linked List Elements .swift */,
				847B42532A381ABE00842AAC /* 205. Isomorphic Strings .swift */,
				846D27C12A396AC700DA2B59 /* 206. Reverse Linked List.swift */,
				84D1862B2A3ABDCF00DE06C4 /* 217. Contains Duplicate .swift */,
				841A45532A3E188F0010FEFA /* 219. Contains Duplicate II .swift */,
				84B32F022A4154AD0084AA3B /* 226. Invert Binary Tree .swift */,
				84BACD112A43F7210046E767 /* 242. Valid Anagram .swift */,
				847AE3AC2A45491C00F60440 /* 257. Binary Tree Paths.swift */,
				84AECB442A493EDE00D9F75A /* 290. Word Pattern .swift */,
				84FFEFEC2A4A8F3F0022C63A /* 344. Reverse String .swift */,
				84FFEFEE2A4A8FA50022C63A /* 345. Reverse Vowels of a String.swift */,
				843ED7E82A5134150004C4B6 /* 383. Ransom Note .swift */,
				84C65D812A526B1100D640E7 /* 387. First Unique Character in a String .swift */,
				8488723B2A53BB2C00205518 /* 389. Find the Difference.swift */,
				84C1093D2A55650700930591 /* 392. Is Subsequence .swift */,
				8491708C2A566F24001EA29A /* 409. Longest Palindrome .swift */,
				842EDF2C2A5BB32200E04513 /* 412. Fizz Buzz.swift */,
				8459E3692A5D02FE000978ED /* 415. Add Strings .swift */,
				844F58D12A5E407B008914D9 /* 434. Number of Segments in a String .swift */,
				84D9F2832A5FB6EA00BC6A3E /* 459. Repeated Substring Pattern .swift */,
				8486AA1E2A60F9D5007164E5 /* 482. License Key Formatting .swift */,
				846108D62A63ADB700A6A230 /* 520. Detect Capital .swift */,
			);
			path = easy;
			sourceTree = "<group>";
		};
/* End PBXGroup section */

/* Begin PBXNativeTarget section */
		8489098C2A0429550066A414 /* leetcodeSwiftC */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 848909942A0429550066A414 /* Build configuration list for PBXNativeTarget "leetcodeSwiftC" */;
			buildPhases = (
				848909892A0429550066A414 /* Sources */,
				8489098A2A0429550066A414 /* Frameworks */,
				8489098B2A0429550066A414 /* CopyFiles */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = leetcodeSwiftC;
			productName = leetcodeSwift;
			productReference = 8489098D2A0429550066A414 /* leetcodeSwiftC */;
			productType = "com.apple.product-type.tool";
		};
/* End PBXNativeTarget section */

/* Begin PBXProject section */
		848909852A0429550066A414 /* Project object */ = {
			isa = PBXProject;
			attributes = {
				BuildIndependentTargetsInParallel = 1;
				LastSwiftUpdateCheck = 1420;
				LastUpgradeCheck = 1420;
				TargetAttributes = {
					8489098C2A0429550066A414 = {
						CreatedOnToolsVersion = 14.2;
						LastSwiftMigration = 1420;
					};
				};
			};
			buildConfigurationList = 848909882A0429550066A414 /* Build configuration list for PBXProject "leetcodeSwiftC" */;
			compatibilityVersion = "Xcode 14.0";
			developmentRegion = en;
			hasScannedForEncodings = 0;
			knownRegions = (
				en,
				Base,
			);
			mainGroup = 848909842A0429550066A414;
			productRefGroup = 8489098E2A0429550066A414 /* Products */;
			projectDirPath = "";
			projectRoot = "";
			targets = (
				8489098C2A0429550066A414 /* leetcodeSwiftC */,
			);
		};
/* End PBXProject section */

/* Begin PBXSourcesBuildPhase section */
		848909892A0429550066A414 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				84696B1B2A0B50CA00BEE76E /* SameTree.swift in Sources */,
				84C1093E2A55650700930591 /* 392. Is Subsequence .swift in Sources */,
				84FFEFED2A4A8F3F0022C63A /* 344. Reverse String .swift in Sources */,
				846108D72A63ADB700A6A230 /* 520. Detect Capital .swift in Sources */,
				8491708D2A566F24001EA29A /* 409. Longest Palindrome .swift in Sources */,
				84DF6F2F2A32D1780027D8D4 /* 191. Number of 1 Bits .swift in Sources */,
				84BCE0622A173C42009E2745 /* 118. Pascal's Triangle .swift in Sources */,
				84DF6F312A32D43D0027D8D4 /* 202. Happy Number.swift in Sources */,
				84FFEFEF2A4A8FA50022C63A /* 345. Reverse Vowels of a String.swift in Sources */,
				847AE3AD2A45491C00F60440 /* 257. Binary Tree Paths.swift in Sources */,
				841968F62A0CDAFA00E08375 /* 104. Maximum Depth of Binary Tree.swift in Sources */,
				84D1862C2A3ABDCF00DE06C4 /* 217. Contains Duplicate .swift in Sources */,
				848CDAE02A11EA6B0009324F /* 111. Minimum Depth of Binary Tree.swift in Sources */,
				84BCF9642A0F3E34008B332A /* 108. Convert Sorted Array to Binary Search Tree.swift in Sources */,
				8473170E2A1B17AA00D665A0 /* 121. Best Time to Buy and Sell Stock.swift in Sources */,
				846A56CB2A2EDDB20039493E /* 169. Majority Element .swift in Sources */,
				847B42542A381ABE00842AAC /* 205. Isomorphic Strings .swift in Sources */,
				84DF0DD22A0768E8008F2395 /* RemoveDuplicatesFromSortedList.swift in Sources */,
				8487AB1E2A25AC2400B62D57 /* 160. Intersection of Two Linked Lists.swift in Sources */,
				8488723C2A53BB2C00205518 /* 389. Find the Difference.swift in Sources */,
				84C65D822A526B1100D640E7 /* 387. First Unique Character in a String .swift in Sources */,
				848909912A0429550066A414 /* main.swift in Sources */,
				84B32F032A4154AD0084AA3B /* 226. Invert Binary Tree .swift in Sources */,
				84741D2F2A1C69A100F428C5 /* 125. Valid Palindrome .swift in Sources */,
				840ED8352A1F2C4C00ACC989 /* 144. Binary Tree Preorder Traversal .swift in Sources */,
				84D9F2842A5FB6EA00BC6A3E /* 459. Repeated Substring Pattern .swift in Sources */,
				84B822702A36E7C500827BD7 /* 203. Remove Linked List Elements .swift in Sources */,
				840398402A0C033B0087DA70 /* SymmetricTree.swift in Sources */,
				8480FD452A1882C100A1D5DF /* 119. Pascal's Triangle II .swift in Sources */,
				84EAEE4A2A08B5E50025A6FA /* MatrixDiagonalSum.swift in Sources */,
				843ED7E92A5134150004C4B6 /* 383. Ransom Note .swift in Sources */,
				8459E36A2A5D02FE000978ED /* 415. Add Strings .swift in Sources */,
				842EDF2D2A5BB32200E04513 /* 412. Fizz Buzz.swift in Sources */,
				84AECB452A493EDE00D9F75A /* 290. Word Pattern .swift in Sources */,
				846D27C22A396AC700DA2B59 /* 206. Reverse Linked List.swift in Sources */,
				844F58D22A5E407B008914D9 /* 434. Number of Segments in a String .swift in Sources */,
				8482D7CD2A26F8F900320062 /* 168. Excel Sheet Column Title .swift in Sources */,
				8424F5D62A31802400D2CFED /* 190. Reverse Bits.swift in Sources */,
				8486AA1F2A60F9D5007164E5 /* 482. License Key Formatting .swift in Sources */,
				848909992A042A130066A414 /* ClimbingStairs.swift in Sources */,
				8445BDAF2A10DB2700758334 /* 110. Balanced Binary Tree.swift in Sources */,
				84F8F32F2A1E339000431F9C /* 141. Linked List Cycle.swift in Sources */,
				84ED135C2A1DBC270077EA35 /* 136. Single Number .swift in Sources */,
				8487AB1C2A25A33900B62D57 /* 145. Binary Tree Postorder Traversal .swift in Sources */,
				8492A6252A0A0B3E0098CEC9 /* BinaryTreeInorderTraversal.swift in Sources */,
				841A45542A3E188F0010FEFA /* 219. Contains Duplicate II .swift in Sources */,
				84BACD122A43F7210046E767 /* 242. Valid Anagram .swift in Sources */,
				84DF0DD42A076EAA008F2395 /* MergeSortedArray.swift in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXSourcesBuildPhase section */

/* Begin XCBuildConfiguration section */
		848909922A0429550066A414 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				CLANG_ANALYZER_NONNULL = YES;
				CLANG_ANALYZER_NUMBER_OBJECT_CONVERSION = YES_AGGRESSIVE;
				CLANG_CXX_LANGUAGE_STANDARD = "gnu++20";
				CLANG_ENABLE_MODULES = YES;
				CLANG_ENABLE_OBJC_ARC = YES;
				CLANG_ENABLE_OBJC_WEAK = YES;
				CLANG_WARN_BLOCK_CAPTURE_AUTORELEASING = YES;
				CLANG_WARN_BOOL_CONVERSION = YES;
				CLANG_WARN_COMMA = YES;
				CLANG_WARN_CONSTANT_CONVERSION = YES;
				CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS = YES;
				CLANG_WARN_DIRECT_OBJC_ISA_USAGE = YES_ERROR;
				CLANG_WARN_DOCUMENTATION_COMMENTS = YES;
				CLANG_WARN_EMPTY_BODY = YES;
				CLANG_WARN_ENUM_CONVERSION = YES;
				CLANG_WARN_INFINITE_RECURSION = YES;
				CLANG_WARN_INT_CONVERSION = YES;
				CLANG_WARN_NON_LITERAL_NULL_CONVERSION = YES;
				CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF = YES;
				CLANG_WARN_OBJC_LITERAL_CONVERSION = YES;
				CLANG_WARN_OBJC_ROOT_CLASS = YES_ERROR;
				CLANG_WARN_QUOTED_INCLUDE_IN_FRAMEWORK_HEADER = YES;
				CLANG_WARN_RANGE_LOOP_ANALYSIS = YES;
				CLANG_WARN_STRICT_PROTOTYPES = YES;
				CLANG_WARN_SUSPICIOUS_MOVE = YES;
				CLANG_WARN_UNGUARDED_AVAILABILITY = YES_AGGRESSIVE;
				CLANG_WARN_UNREACHABLE_CODE = YES;
				CLANG_WARN__DUPLICATE_METHOD_MATCH = YES;
				COPY_PHASE_STRIP = NO;
				DEBUG_INFORMATION_FORMAT = dwarf;
				ENABLE_STRICT_OBJC_MSGSEND = YES;
				ENABLE_TESTABILITY = YES;
				GCC_C_LANGUAGE_STANDARD = gnu11;
				GCC_DYNAMIC_NO_PIC = NO;
				GCC_NO_COMMON_BLOCKS = YES;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"DEBUG=1",
					"$(inherited)",
				);
				GCC_WARN_64_TO_32_BIT_CONVERSION = YES;
				GCC_WARN_ABOUT_RETURN_TYPE = YES_ERROR;
				GCC_WARN_UNDECLARED_SELECTOR = YES;
				GCC_WARN_UNINITIALIZED_AUTOS = YES_AGGRESSIVE;
				GCC_WARN_UNUSED_FUNCTION = YES;
				GCC_WARN_UNUSED_VARIABLE = YES;
				MACOSX_DEPLOYMENT_TARGET = 12.6;
				MTL_ENABLE_DEBUG_INFO = INCLUDE_SOURCE;
				MTL_FAST_MATH = YES;
				ONLY_ACTIVE_ARCH = YES;
				SDKROOT = macosx;
				SWIFT_ACTIVE_COMPILATION_CONDITIONS = DEBUG;
				SWIFT_OPTIMIZATION_LEVEL = "-Onone";
			};
			name = Debug;
		};
		848909932A0429550066A414 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				CLANG_ANALYZER_NONNULL = YES;
				CLANG_ANALYZER_NUMBER_OBJECT_CONVERSION = YES_AGGRESSIVE;
				CLANG_CXX_LANGUAGE_STANDARD = "gnu++20";
				CLANG_ENABLE_MODULES = YES;
				CLANG_ENABLE_OBJC_ARC = YES;
				CLANG_ENABLE_OBJC_WEAK = YES;
				CLANG_WARN_BLOCK_CAPTURE_AUTORELEASING = YES;
				CLANG_WARN_BOOL_CONVERSION = YES;
				CLANG_WARN_COMMA = YES;
				CLANG_WARN_CONSTANT_CONVERSION = YES;
				CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS = YES;
				CLANG_WARN_DIRECT_OBJC_ISA_USAGE = YES_ERROR;
				CLANG_WARN_DOCUMENTATION_COMMENTS = YES;
				CLANG_WARN_EMPTY_BODY = YES;
				CLANG_WARN_ENUM_CONVERSION = YES;
				CLANG_WARN_INFINITE_RECURSION = YES;
				CLANG_WARN_INT_CONVERSION = YES;
				CLANG_WARN_NON_LITERAL_NULL_CONVERSION = YES;
				CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF = YES;
				CLANG_WARN_OBJC_LITERAL_CONVERSION = YES;
				CLANG_WARN_OBJC_ROOT_CLASS = YES_ERROR;
				CLANG_WARN_QUOTED_INCLUDE_IN_FRAMEWORK_HEADER = YES;
				CLANG_WARN_RANGE_LOOP_ANALYSIS = YES;
				CLANG_WARN_STRICT_PROTOTYPES = YES;
				CLANG_WARN_SUSPICIOUS_MOVE = YES;
				CLANG_WARN_UNGUARDED_AVAILABILITY = YES_AGGRESSIVE;
				CLANG_WARN_UNREACHABLE_CODE = YES;
				CLANG_WARN__DUPLICATE_METHOD_MATCH = YES;
				COPY_PHASE_STRIP = NO;
				DEBUG_INFORMATION_FORMAT = "dwarf-with-dsym";
				ENABLE_NS_ASSERTIONS = NO;
				ENABLE_STRICT_OBJC_MSGSEND = YES;
				GCC_C_LANGUAGE_STANDARD = gnu11;
				GCC_NO_COMMON_BLOCKS = YES;
				GCC_WARN_64_TO_32_BIT_CONVERSION = YES;
				GCC_WARN_ABOUT_RETURN_TYPE = YES_ERROR;
				GCC_WARN_UNDECLARED_SELECTOR = YES;
				GCC_WARN_UNINITIALIZED_AUTOS = YES_AGGRESSIVE;
				GCC_WARN_UNUSED_FUNCTION = YES;
				GCC_WARN_UNUSED_VARIABLE = YES;
				MACOSX_DEPLOYMENT_TARGET = 12.6;
				MTL_ENABLE_DEBUG_INFO = NO;
				MTL_FAST_MATH = YES;
				SDKROOT = macosx;
				SWIFT_COMPILATION_MODE = wholemodule;
				SWIFT_OPTIMIZATION_LEVEL = "-O";
			};
			name = Release;
		};
		848909952A0429550066A414 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				CLANG_ENABLE_MODULES = YES;
				CODE_SIGN_STYLE = Automatic;
				DEVELOPMENT_TEAM = J473GY97U7;
				ENABLE_HARDENED_RUNTIME = YES;
				LD_RUNPATH_SEARCH_PATHS = (
					"$(inherited)",
					"@executable_path/../Frameworks",
					"@loader_path/../Frameworks",
				);
				PRODUCT_NAME = "$(TARGET_NAME)";
				SWIFT_OPTIMIZATION_LEVEL = "-Onone";
				SWIFT_VERSION = 5.0;
			};
			name = Debug;
		};
		848909962A0429550066A414 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				CLANG_ENABLE_MODULES = YES;
				CODE_SIGN_STYLE = Automatic;
				DEVELOPMENT_TEAM = J473GY97U7;
				ENABLE_HARDENED_RUNTIME = YES;
				LD_RUNPATH_SEARCH_PATHS = (
					"$(inherited)",
					"@executable_path/../Frameworks",
					"@loader_path/../Frameworks",
				);
				PRODUCT_NAME = "$(TARGET_NAME)";
				SWIFT_VERSION = 5.0;
			};
			name = Release;
		};
/* End XCBuildConfiguration section */

/* Begin XCConfigurationList section */
		848909882A0429550066A414 /* Build configuration list for PBXProject "leetcodeSwiftC" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				848909922A0429550066A414 /* Debug */,
				848909932A0429550066A414 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		848909942A0429550066A414 /* Build configuration list for PBXNativeTarget "leetcodeSwiftC" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				848909952A0429550066A414 /* Debug */,
				848909962A0429550066A414 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
/* End XCConfigurationList section */
	};
	rootObject = 848909852A0429550066A414 /* Project object */;
}
